# 📘 Day 2 – Client–Server Architecture

### 1. What is Client–Server Model

The client–server model is the foundation of how the internet works.

* **Client**: A device or program (browser, mobile app) that requests data or services.
* **Server**: A computer system that stores, processes, and delivers requested data to the client.
* **Relationship:** Client asks → Server responds.

**Example:**
You (client) request `google.com` → Google’s server responds with the webpage.

---

### 2. Difference Between Client and Server

| Client (Browser)             | Server                               |
| ---------------------------- | ------------------------------------ |
| Runs on user’s device        | Runs on a remote, powerful computer  |
| Sends requests for resources | Stores website, app, or database     |
| Displays fetched content     | Responds to incoming requests        |
| Works temporarily            | Always online to ensure availability |

---

### 3. HTTP – HyperText Transfer Protocol

HTTP defines the rules for sending and receiving data over the internet.
It allows communication between browsers (clients) and servers.

---

### 4. HTTP Response Cycle

| Step             | Description                                   |
| ---------------- | --------------------------------------------- |
| 1️⃣ **Request**  | Browser sends HTTP request to the server.     |
| 2️⃣ **Process**  | Server reads and processes the request.       |
| 3️⃣ **Response** | Server sends data (HTML, CSS, JS, etc.) back. |
| 4️⃣ **Render**   | Browser displays the webpage to the user.     |

---

### 🍕 Analogy: Zomato Example

* **Request:** You order a pizza.
* **Process:** Restaurant prepares it.
* **Response:** Delivery boy brings it.
* **Render:** You eat the pizza.

---

### 💬 Reflection

This topic gave me a clear understanding of how browsers and servers talk to each other, making the web interactive and responsive.

---

✅ *Repository:* [GitHub link here]
📅 *Day 2 of My Web Development Journey*
#ClientServer #WebDevelopment #LearningNotes #HTTP #NetworkingBasics #DeveloperJourney
